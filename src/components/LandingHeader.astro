---
import Logo from "./Logo.astro";
---

<header
    id="landing-header"
    class="py-2 px-10 top-0 flex items-center fixed w-full justify-between z-40 text-white"
>
    <div class="flex flex-grow basis-0">
        <Logo />
    </div>
    <nav>
        <ul
            class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
        >
            <li><a href="#">Model S</a></li>
            <li><a href="#">Model 3</a></li>
            <li><a href="#">Model X</a></li>
            <li><a href="#">Model Y</a></li>
            <li><a href="#">Powerwall</a></li>
            <li><a href="#">Carga</a></li>
        </ul>
    </nav>
    <nav class="flex flex-grow justify-end basis-0">
        <ul
            class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
        >
            <li><a href="#">Soporte</a></li>
            <li><a href="#">Tienda</a></li>
            <li><a href="#">Cuenta</a></li>
            <li>
                <a href="#"
                    ><svg
                        class="h-6 w-10 transition-colors duration-500"
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                        ><path
                            fill="currentColor"
                            d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM6.858 18.752c.605-1.868 2.722-3.24 5.142-3.24 2.42 0 4.537 1.372 5.142 3.24C15.712 19.844 13.933 20.5 12 20.5s-3.712-.656-5.142-1.748zm11.469-1.095c-1.02-2.165-3.483-3.645-6.327-3.645s-5.307 1.48-6.327 3.645A8.456 8.456 0 0 1 3.5 12c0-4.687 3.813-8.5 8.5-8.5 4.687 0 8.5 3.813 8.5 8.5a8.456 8.456 0 0 1-2.173 5.657zM12 6a3.5 3.5 0 1 0 0 7 3.5 3.5 0 0 0 0-7zm0 5.5c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2z"
                        ></path></svg
                    ></a
                >
            </li>
        </ul>
    </nav>

    <div
        id="menu-backdrop"
        class={`absolute bg-black/5 backdrop-blur-lg rounded translate-x-[var(--left)] translate-y-[var(--top)] left-0 top-0 w-[var(--width)] h-[var(--height)] transition-all duration-300 ease-in-out opacity-0 -z-10`}
    >
    </div>
</header>

<script>
    // Selecciona todos los elementos <li> dentro del elemento con id "landing-header" y los almacena en la variable listItem
    const listItem = document.querySelectorAll("#landing-header li");

    // Selecciona el elemento con id "menu-backdrop" y lo almacena en la variable menuBackdrop
    const menuBackdrop = document.querySelector(
        "#menu-backdrop",
    ) as HTMLElement;

    // Itera sobre cada elemento de listItem
    listItem.forEach((item) => {
        // Agrega un evento de escucha para cuando el cursor entra en un elemento de lista (mouseenter)
        item.addEventListener("mouseenter", () => {
            // Obtiene las coordenadas y dimensiones del elemento de lista
            const { left, top, width, height } = item.getBoundingClientRect();

            // Establece las variables CSS para el desplazamiento y tamaño del fondo del menú
            menuBackdrop.style.setProperty("--left", `${left}px`);
            menuBackdrop.style.setProperty("--top", `${top}px`);
            menuBackdrop.style.setProperty("--width", `${width}px`);
            menuBackdrop.style.setProperty("--height", `${height}px`);

            // Establece la opacidad y visibilidad del fondo del menú para hacerlo visible
            menuBackdrop.style.opacity = "1";
            menuBackdrop.style.visibility = "visible";
        });

        // Agrega un evento de escucha para cuando el cursor sale de un elemento de lista (mouseleave)
        item.addEventListener("mouseleave", () => {
            // Oculta el fondo del menú cambiando la opacidad y visibilidad
            menuBackdrop.style.opacity = "0";
            menuBackdrop.style.visibility = "hidden";
        });
    });
</script>

<script>
    const $header = document.querySelector("#landing-header") as HTMLElement;
    const observerOptions = {
        root: null,
        rootMargin: "0px", // en cuanto se vea el elemento
        threshold: 0.9, // porcentaje de visibilidad
    };

    console.log(observerOptions);

    // Creamos un nuevo observador de intersección
    const observer = new IntersectionObserver((entries) => {
        // La función de devolución de llamada se ejecuta cada vez que se produce una intersección
        entries.forEach((entry) => {
            // Para cada entrada (elemento observado)
            const { isIntersecting } = entry; // Extraemos la propiedad isIntersecting de la entrada
            if (isIntersecting) {
                // Si el elemento está intersectando con el viewport
                const color = entry.target.getAttribute("data-header-color"); // Obtenemos el color del atributo data-header-color del elemento
                $header.style.color = color; // Cambiamos el color del texto del encabezado al color obtenido
            }
        });
    }, observerOptions); // Pasamos las opciones del observador como segundo argumento

    // Observamos los elementos con la clase .landing-section y activamos el observador para cada uno de ellos
    const $section = document.querySelectorAll(".landing-section");
    $section.forEach((section) => observer.observe(section));
</script>
